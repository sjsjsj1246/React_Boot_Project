{"version":3,"sources":["components/main/main.module.css","components/header/header.module.css","components/header/header.jsx","components/main/main.jsx","projects/todo_list/src/todo_context.jsx","projects/todo_list/src/components/todo_create.jsx","projects/todo_list/src/components/todo_head.jsx","projects/todo_list/src/components/todo_item.jsx","projects/todo_list/src/components/todo_list.jsx","projects/todo_list/src/components/todo_template.jsx","projects/todo_list/src/app.jsx","projects/connect_API/src/components/useAsync.js","projects/connect_API/src/components/user.jsx","projects/connect_API/src/components/users.jsx","projects/connect_API/src/app.jsx","app.jsx","index.js"],"names":["module","exports","Header","props","className","styles","container","to","name","nav","href","Main","introImg","src","alt","content","title","projectList","id","explain","map","item","projectItem","projectTitle","projectExplain","initialTodos","text","done","todoReducer","state","action","type","concat","todo","filter","Error","TodoStateContext","createContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","children","useReducer","dispatch","nextId","useRef","Provider","value","useTodoState","context","useContext","useTodoDispatch","CircleButton","styled","button","open","css","InsertFormPositioner","div","InsertForm","form","Input","input","TodoCreate","useState","setOpen","setValue","useTodoNextId","onSubmit","e","preventDefault","current","autoFocus","placeholder","onChange","target","onClick","React","memo","TodoHeadBlock","TodoHead","undoneTasks","today","Date","dateString","toLocaleDateString","year","month","day","dayName","weekday","length","Remove","TodoItemBlock","CheckCircle","Text","TodoItem","TodoListBlock","TodoList","todos","TodoTemplateBlock","TodoTemplate","GlobalStyle","createGlobalStyle","App","reducer","loading","data","error","useAsync","callback","deps","skip","fetchData","a","useEffect","getUser","axios","get","response","User","promiseFn","watch","user","isLoading","username","email","getUsers","Users","userId","setUserId","refetch","users","style","cursor","basename","process","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6dc8164.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"main_container__ti5Y5\",\"introImg\":\"main_introImg__2vPaT\",\"content\":\"main_content__2k12P\",\"title\":\"main_title__1sxF5\",\"projectList\":\"main_projectList__1WrQb\",\"projectItem\":\"main_projectItem__1l7Y7\",\"projectTitle\":\"main_projectTitle__21DQA\",\"projectExplain\":\"main_projectExplain__2Wgol\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"header_container__2-4_2\",\"rotating\":\"header_rotating__db5bi\",\"nav\":\"header_nav__Yggvy\"};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './header.module.css';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={styles.container}>\r\n      <Link to=\"/\">\r\n        <ion-icon name=\"logo-react\" />\r\n      </Link>\r\n      <nav className={styles.nav}>\r\n        <a href=\"https://youtu.be/hqwDFwqyWkE\">하나</a>\r\n        <a href=\"https://youtu.be/hqwDFwqyWkE?t=1\">둘</a>\r\n        <a href=\"https://youtu.be/hqwDFwqyWkE?t=1.5\">셋</a>\r\n        <a href=\"https://youtu.be/hqwDFwqyWkE?t=2\">야!</a>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './main.module.css';\r\n\r\nconst Main = (props) => {\r\n  const projects = [\r\n    {\r\n      id: 'todoList',\r\n      title: 'Todo List',\r\n      explain: 'context API & styled-component',\r\n    },\r\n    {\r\n      id: 'connectAPI',\r\n      title: 'Connect API',\r\n      explain: 'API, Async, Context',\r\n    },\r\n  ];\r\n  return (\r\n    <div className={styles.container}>\r\n      <img\r\n        className={styles.introImg}\r\n        src=\"https://i.postimg.cc/LXNRkJXK/sky.jpg\"\r\n        alt=\"intro\"\r\n      />\r\n      <div className={styles.content}>\r\n        <div className={styles.title}>\r\n          <h1>React Boot Projct</h1>\r\n          <p>React, Redux, typescript...</p>\r\n        </div>\r\n        <div className={styles.projectList}>\r\n          {projects.map((item) => (\r\n            <Link className={styles.projectItem} to={`/${item.id}`}>\r\n              <h1 className={styles.projectTitle}>{item.title}</h1>\r\n              <p className={styles.projectExplain}>{item.explain}</p>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { createContext, useContext, useReducer, useRef } from 'react';\r\n\r\nconst initialTodos = [\r\n  {\r\n    id: 1,\r\n    text: '할 일을 추가해보세요',\r\n    done: false,\r\n  },\r\n];\r\n\r\nfunction todoReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'CREATE':\r\n      return state.concat(action.todo);\r\n    case 'TOGGLE':\r\n      return state.map((todo) =>\r\n        todo.id === action.id ? { ...todo, done: !todo.done } : todo,\r\n      );\r\n    case 'REMOVE':\r\n      return state.filter((todo) => todo.id !== action.id);\r\n    default:\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n  }\r\n}\r\n\r\nconst TodoStateContext = createContext();\r\nconst TodoDispatchContext = createContext();\r\nconst TodoNextIdContext = createContext();\r\n\r\nexport function TodoProvider({ children }) {\r\n  const [state, dispatch] = useReducer(todoReducer, initialTodos);\r\n  const nextId = useRef(5);\r\n  return (\r\n    <TodoStateContext.Provider value={state}>\r\n      <TodoDispatchContext.Provider value={dispatch}>\r\n        <TodoNextIdContext.Provider value={nextId}>\r\n          {children}\r\n        </TodoNextIdContext.Provider>\r\n      </TodoDispatchContext.Provider>\r\n    </TodoStateContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useTodoState() {\r\n  const context = useContext(TodoStateContext);\r\n  if (!context) {\r\n    throw new Error('Cannot find TodoProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport function useTodoDispatch() {\r\n  const context = useContext(TodoDispatchContext);\r\n  if (!context) {\r\n    throw new Error('Cannot find TodoProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport function useTodoNextId() {\r\n  const context = useContext(TodoNextIdContext);\r\n  if (!context) {\r\n    throw new Error('Cannot find TodoProvider');\r\n  }\r\n  return context;\r\n}\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport { useState } from 'react';\r\nimport { useTodoDispatch, useTodoNextId } from '../todo_context';\r\n\r\nconst CircleButton = styled.button`\r\n  background: #38d9a9;\r\n  &:hover {\r\n    background: #63e6be;\r\n  }\r\n  &:active {\r\n    background: #20c997;\r\n  }\r\n\r\n  z-index: 5;\r\n  cursor: pointer;\r\n  width: 80px;\r\n  height: 80px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 60px;\r\n  position: absolute;\r\n  left: 50%;\r\n  bottom: 0px;\r\n  transform: translate(-50%, 50%);\r\n  color: white;\r\n  border-radius: 50%;\r\n  border: none;\r\n  outline: none;\r\n\r\n  transition: 0.125s all ease-in;\r\n  ${(props) =>\r\n    props.open &&\r\n    css`\r\n      background: #ff6b6b;\r\n      &:hover {\r\n        background: #ff8787;\r\n      }\r\n      &:active {\r\n        backgroubnd: #fa5252;\r\n      }\r\n      transform: translate(-50%, 50%) rotate(45deg);\r\n    `}\r\n`;\r\n\r\nconst InsertFormPositioner = styled.div`\r\n  width: 100%;\r\n  bottom: 0;\r\n  left: 0;\r\n  position: absolute;\r\n`;\r\n\r\nconst InsertForm = styled.form`\r\n  background: #f8f9fa;\r\n  padding-left: 32px;\r\n  padding-top: 32px;\r\n  padding-right: 32px;\r\n  padding-bottom: 72px;\r\n\r\n  border-bottom-left-radius: 16px;\r\n  border-bottom-right-radius: 16px;\r\n  border-top: 1px solid #e9ecef;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 12px;\r\n  border-radius: 4px;\r\n  border: 1px solid #dee2e6;\r\n  width: 100%;\r\n  outline: none;\r\n  font-size: 18px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst TodoCreate = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [value, setValue] = useState('');\r\n\r\n  const dispatch = useTodoDispatch();\r\n  const nextId = useTodoNextId();\r\n\r\n  const onToggle = () => setOpen(!open);\r\n  const onChange = (e) => setValue(e.target.value);\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch({\r\n      type: 'CREATE',\r\n      todo: {\r\n        id: nextId.current,\r\n        text: value,\r\n        done: false,\r\n      },\r\n    });\r\n    setValue('');\r\n    setOpen(false);\r\n    nextId.current += 1;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {open && (\r\n        <InsertFormPositioner>\r\n          <InsertForm onSubmit={onSubmit}>\r\n            <Input\r\n              autoFocus\r\n              placeholder=\"할 일을 입력 후, Enter를 누르세요\"\r\n              onChange={onChange}\r\n              value={value}\r\n            />\r\n          </InsertForm>\r\n        </InsertFormPositioner>\r\n      )}\r\n      <CircleButton onClick={onToggle} open={open}>\r\n        <MdAdd />\r\n      </CircleButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(TodoCreate);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTodoState } from '../todo_context';\r\n\r\nconst TodoHeadBlock = styled.div`\r\n  padding: 48px 32px 24px 32px;\r\n  border-bottom: 1px solid #e9ecef;\r\n  h1 {\r\n    margin: 0;\r\n    font-size: 36px;\r\n    color: #343a40;\r\n  }\r\n  .day {\r\n    margin-top: 4px;\r\n    color: #868e96;\r\n    font-size: 21px;\r\n  }\r\n  .task-left {\r\n    color: #20c997;\r\n    font-size: 18px;\r\n    margin-top: 40px;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst TodoHead = (props) => {\r\n  const todos = useTodoState();\r\n  const undoneTasks = todos.filter((todo) => !todo.done);\r\n\r\n  const today = new Date();\r\n  const dateString = today.toLocaleDateString('ko-KR', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n  });\r\n  const dayName = today.toLocaleDateString('ko-KR', { weekday: 'long' });\r\n\r\n  return (\r\n    <TodoHeadBlock>\r\n      <h1>{dateString}</h1>\r\n      <div className=\"day\">{dayName}</div>\r\n      <div className=\"task-left\">할 일 {undoneTasks.length}개 남음</div>\r\n    </TodoHeadBlock>\r\n  );\r\n};\r\n\r\nexport default TodoHead;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdDone, MdDelete } from 'react-icons/md';\r\nimport { useTodoDispatch } from '../todo_context';\r\n\r\nconst Remove = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #dee2e6;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  &:hovver {\r\n    color: #ff6b6b;\r\n  }\r\n  display: none;\r\n`;\r\n\r\nconst TodoItemBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  &:hover {\r\n    ${Remove} {\r\n      display: initial;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CheckCircle = styled.div`\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 16px;\r\n  border: 1px solid #ced4da;\r\n  font-size: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 20px;\r\n  cursor: pointer;\r\n  ${(props) =>\r\n    props.done &&\r\n    css`\r\n      border: 1px solid #38d9a9;\r\n      color: #38d9a9;\r\n    `}\r\n`;\r\n\r\nconst Text = styled.div`\r\n  flex: 1;\r\n  font-size: 21px;\r\n  color: #495057;\r\n  ${(props) =>\r\n    props.done &&\r\n    css`\r\n      color: #ced4da;\r\n    `}\r\n`;\r\n\r\nconst TodoItem = ({ id, done, text }) => {\r\n  const dispatch = useTodoDispatch();\r\n  const onToggle = () => dispatch({ type: 'TOGGLE', id });\r\n  const onRemove = () => dispatch({ type: 'REMOVE', id });\r\n  return (\r\n    <TodoItemBlock>\r\n      <CheckCircle done={done} onClick={onToggle}>\r\n        {done && <MdDone />}\r\n      </CheckCircle>\r\n      <Text done={done}>{text}</Text>\r\n      <Remove onClick={onRemove}>\r\n        <MdDelete />\r\n      </Remove>\r\n    </TodoItemBlock>\r\n  );\r\n};\r\n\r\nexport default React.memo(TodoItem);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport TodoItem from './todo_item';\r\nimport { useTodoState } from '../todo_context';\r\n\r\nconst TodoListBlock = styled.div`\r\n  flex: 1;\r\n  padding: 20px 32px 48px 32px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst TodoList = (props) => {\r\n  const todos = useTodoState();\r\n\r\n  return (\r\n    <TodoListBlock>\r\n      {todos.map((todo) => (\r\n        <TodoItem\r\n          key={todo.id}\r\n          id={todo.id}\r\n          text={todo.text}\r\n          done={todo.done}\r\n        />\r\n      ))}\r\n    </TodoListBlock>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoTemplateBlock = styled.div`\r\n  width: 512px;\r\n  height: 768px;\r\n\r\n  position: relative;\r\n  background: white;\r\n  border-radius: 16px;\r\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\r\n\r\n  margin: 96px auto 32px auto;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst TodoTemplate = ({ children }) => {\r\n  return <TodoTemplateBlock>{children}</TodoTemplateBlock>;\r\n};\r\n\r\nexport default TodoTemplate;\r\n","import React from 'react';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport TodoCreate from './components/todo_create';\r\nimport TodoHead from './components/todo_head';\r\nimport TodoList from './components/todo_list';\r\nimport TodoTemplate from './components/todo_template';\r\nimport { TodoProvider } from './todo_context';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    body {\r\n        background: #e9ecef;\r\n    }\r\n`;\r\n\r\nconst App = (props) => {\r\n  return (\r\n    <TodoProvider>\r\n      <GlobalStyle />\r\n      <TodoTemplate>\r\n        <TodoHead />\r\n        <TodoList />\r\n        <TodoCreate />\r\n      </TodoTemplate>\r\n    </TodoProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { useReducer, useEffect } from 'react';\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'LOADING':\r\n      return {\r\n        loading: true,\r\n        data: null,\r\n        error: null,\r\n      };\r\n    case 'SUCCESS':\r\n      return {\r\n        loading: false,\r\n        data: action.data,\r\n        error: null,\r\n      };\r\n    case 'ERROR':\r\n      return {\r\n        loading: false,\r\n        data: null,\r\n        error: action.error,\r\n      };\r\n    default:\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n  }\r\n}\r\n\r\nfunction useAsync(callback, deps = [], skip = false) {\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    loading: false,\r\n    data: null,\r\n    error: false,\r\n  });\r\n\r\n  const fetchData = async () => {\r\n    dispatch({ type: 'LOADING' });\r\n    try {\r\n      const data = await callback();\r\n      dispatch({ type: 'SUCCESS', data });\r\n    } catch (e) {\r\n      dispatch({ type: 'ERROR', error: e });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (skip) return;\r\n    fetchData();\r\n    // eslint 설정을 다음 줄에서만 비활성화\r\n    // eslint-disable-next-line\r\n  }, deps);\r\n\r\n  return [state, fetchData];\r\n}\r\n\r\nexport default useAsync;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { useAsync } from 'react-async';\r\n\r\nasync function getUser({ id }) {\r\n  const response = await axios.get(\r\n    `https://jsonplaceholder.typicode.com/users/${id}`,\r\n  );\r\n  return response.data;\r\n}\r\n\r\nfunction User({ id }) {\r\n  const { data: user, error, isLoading } = useAsync({\r\n    promiseFn: getUser,\r\n    id,\r\n    watch: id,\r\n  });\r\n\r\n  if (isLoading) return <div>로딩중..</div>;\r\n  if (error) return <div>에러가 발생했습니다</div>;\r\n  if (!user) return null;\r\n\r\n  return (\r\n    <div>\r\n      <h2>{user.username}</h2>\r\n      <p>\r\n        <b>Email:</b> {user.email}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport useAsync from './useAsync';\r\nimport User from './user';\r\n\r\n// useAsync 에서는 Promise 의 결과를 바로 data 에 담기 때문에,\r\n// 요청을 한 이후 response 에서 data 추출하여 반환하는 함수를 따로 만들었습니다.\r\nasync function getUsers() {\r\n  const response = await axios.get(\r\n    'https://jsonplaceholder.typicode.com/users',\r\n  );\r\n  return response.data;\r\n}\r\n\r\nfunction Users() {\r\n  const [userId, setUserId] = useState(null);\r\n  const [state, refetch] = useAsync(getUsers, [], true);\r\n\r\n  const { loading, data: users, error } = state; // state.data 를 users 키워드로 조회\r\n\r\n  if (loading) return <div>로딩중..</div>;\r\n  if (error) return <div>에러가 발생했습니다</div>;\r\n  if (!users) return <button onClick={refetch}>불러오기</button>;\r\n  return (\r\n    <>\r\n      <ul>\r\n        {users.map((user) => (\r\n          <li\r\n            key={user.id}\r\n            onClick={() => setUserId(user.id)}\r\n            style={{ cursor: 'pointer' }}\r\n          >\r\n            {user.username} ({user.name})\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button onClick={refetch}>다시 불러오기</button>\r\n      {userId && <User id={userId} />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n","import React from 'react';\r\nimport Users from './components/users';\r\nimport './app.css';\r\n\r\nconst App = (props) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <Users />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport styles from './app.module.css';\r\nimport Header from './components/header/header';\r\nimport Main from './components/main/main';\r\nimport TodoListApp from './projects/todo_list/src/app';\r\nimport ConnectApiApp from './projects/connect_API/src/app';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Main />\r\n        </Route>\r\n        <Route path=\"/todoList\">\r\n          <TodoListApp />\r\n        </Route>\r\n        <Route path=\"/connectAPI\">\r\n          <ConnectApiApp />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}