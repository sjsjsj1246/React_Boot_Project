{"version":3,"sources":["components/main/main.module.css","components/header/header.module.css","projects/connect_API/src/app.module.css","projects/redux/src/app.module.css","components/header/header.jsx","components/main/main.jsx","projects/todo_list/src/todo_context.jsx","projects/todo_list/src/components/todo_create.jsx","projects/todo_list/src/components/todo_head.jsx","projects/todo_list/src/components/todo_item.jsx","projects/todo_list/src/components/todo_list.jsx","projects/todo_list/src/components/todo_template.jsx","projects/todo_list/src/app.jsx","projects/connect_API/src/asyncActionUtils.js","projects/connect_API/src/api.js","projects/connect_API/src/users_context.js","projects/connect_API/src/components/user.jsx","projects/connect_API/src/components/users.jsx","projects/connect_API/src/app.jsx","projects/redux/src/components/counter.jsx","projects/redux/src/modules/counter.js","projects/redux/src/containers/counter_container.jsx","projects/redux/src/app.jsx","projects/redux/src/modules/todos.js","projects/redux/src/modules/index.js","projects/redux/src/index.js","projects/typescript/src/app.jsx","app.jsx","index.js"],"names":["module","exports","Header","props","className","styles","container","to","name","nav","href","Main","introImg","src","alt","content","title","projectList","id","explain","map","item","projectItem","projectTitle","projectExplain","initialTodos","text","done","todoReducer","state","action","type","concat","todo","filter","Error","TodoStateContext","createContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","children","useReducer","dispatch","nextId","useRef","Provider","value","useTodoState","context","useContext","useTodoDispatch","CircleButton","styled","button","open","css","InsertFormPositioner","div","InsertForm","form","Input","input","TodoCreate","useState","setOpen","setValue","useTodoNextId","onSubmit","e","preventDefault","current","autoFocus","placeholder","onChange","target","onClick","React","memo","TodoHeadBlock","TodoHead","undoneTasks","today","Date","dateString","toLocaleDateString","year","month","day","dayName","weekday","length","Remove","TodoItemBlock","CheckCircle","Text","TodoItem","TodoListBlock","TodoList","todos","TodoTemplateBlock","TodoTemplate","GlobalStyle","createGlobalStyle","App","createAsyncDispatcher","promiseFn","SUCCESS","ERROR","a","rest","data","error","initialAsyncState","loading","loadingState","createAsyncHandler","key","axios","get","response","initialState","users","user","usersHandler","userHandler","usersReducer","UsersStateContext","UsersDispatchContext","UsersProvider","useUsersState","useUsersDispatch","getUsers","getUser","User","useEffect","username","email","Users","userId","setUserId","fetchData","style","cursor","Counter","number","diff","onIncrease","onDecrease","onSetDiff","min","parseInt","SET_DIFF","INCREASE","DECREASE","CounterContainer","useSelector","counter","useDispatch","setDiff","ADD_TODO","TOGGLE_TODO","rootReducer","combineReducers","store","createStore","console","log","getState","Index","Component","basename","process","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54e4e375.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"main_container__ti5Y5\",\"introImg\":\"main_introImg__2vPaT\",\"content\":\"main_content__2k12P\",\"title\":\"main_title__1sxF5\",\"projectList\":\"main_projectList__1WrQb\",\"projectItem\":\"main_projectItem__1l7Y7\",\"projectTitle\":\"main_projectTitle__21DQA\",\"projectExplain\":\"main_projectExplain__2Wgol\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"header_container__2-4_2\",\"rotating\":\"header_rotating__db5bi\",\"nav\":\"header_nav__Yggvy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__2XKh4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__3EOE3\"};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './header.module.css';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={styles.container}>\r\n      <Link to=\"/\">\r\n        <ion-icon name=\"logo-react\" />\r\n      </Link>\r\n      <nav className={styles.nav}>\r\n        <a href=\"https://youtu.be/hqwDFwqyWkE\">하나</a>\r\n        <a href=\"https://youtu.be/hqwDFwqyWkE?t=1\">둘</a>\r\n        <a href=\"https://youtu.be/hqwDFwqyWkE?t=1.5\">셋</a>\r\n        <a href=\"https://youtu.be/hqwDFwqyWkE?t=2\">야!</a>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './main.module.css';\r\n\r\nconst Main = (props) => {\r\n  const projects = [\r\n    {\r\n      id: 'todoList',\r\n      title: 'Todo List',\r\n      explain: 'context API & styled-component',\r\n    },\r\n    {\r\n      id: 'connectAPI',\r\n      title: 'Connect API',\r\n      explain: 'API, Async, Context',\r\n    },\r\n    {\r\n      id: 'redux',\r\n      title: 'Redux',\r\n      explain: 'Redux, useSelector, connect',\r\n    },\r\n    {\r\n      id: 'typescript',\r\n      title: 'TypeScript',\r\n      explain: 'TypeScript with context API, redux',\r\n    },\r\n  ];\r\n  return (\r\n    <div className={styles.container}>\r\n      <img\r\n        className={styles.introImg}\r\n        src=\"https://i.postimg.cc/LXNRkJXK/sky.jpg\"\r\n        alt=\"intro\"\r\n      />\r\n      <div className={styles.content}>\r\n        <div className={styles.title}>\r\n          <h1>React Boot Projct</h1>\r\n          <p>React, Redux, typescript...</p>\r\n        </div>\r\n        <div className={styles.projectList}>\r\n          {projects.map((item) => (\r\n            <Link className={styles.projectItem} to={`/${item.id}`}>\r\n              <h1 className={styles.projectTitle}>{item.title}</h1>\r\n              <p className={styles.projectExplain}>{item.explain}</p>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { createContext, useContext, useReducer, useRef } from 'react';\r\n\r\nconst initialTodos = [\r\n  {\r\n    id: 1,\r\n    text: '할 일을 추가해보세요',\r\n    done: false,\r\n  },\r\n];\r\n\r\nfunction todoReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'CREATE':\r\n      return state.concat(action.todo);\r\n    case 'TOGGLE':\r\n      return state.map((todo) =>\r\n        todo.id === action.id ? { ...todo, done: !todo.done } : todo,\r\n      );\r\n    case 'REMOVE':\r\n      return state.filter((todo) => todo.id !== action.id);\r\n    default:\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n  }\r\n}\r\n\r\nconst TodoStateContext = createContext();\r\nconst TodoDispatchContext = createContext();\r\nconst TodoNextIdContext = createContext();\r\n\r\nexport function TodoProvider({ children }) {\r\n  const [state, dispatch] = useReducer(todoReducer, initialTodos);\r\n  const nextId = useRef(5);\r\n  return (\r\n    <TodoStateContext.Provider value={state}>\r\n      <TodoDispatchContext.Provider value={dispatch}>\r\n        <TodoNextIdContext.Provider value={nextId}>\r\n          {children}\r\n        </TodoNextIdContext.Provider>\r\n      </TodoDispatchContext.Provider>\r\n    </TodoStateContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useTodoState() {\r\n  const context = useContext(TodoStateContext);\r\n  if (!context) {\r\n    throw new Error('Cannot find TodoProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport function useTodoDispatch() {\r\n  const context = useContext(TodoDispatchContext);\r\n  if (!context) {\r\n    throw new Error('Cannot find TodoProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport function useTodoNextId() {\r\n  const context = useContext(TodoNextIdContext);\r\n  if (!context) {\r\n    throw new Error('Cannot find TodoProvider');\r\n  }\r\n  return context;\r\n}\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport { useState } from 'react';\r\nimport { useTodoDispatch, useTodoNextId } from '../todo_context';\r\n\r\nconst CircleButton = styled.button`\r\n  background: #38d9a9;\r\n  &:hover {\r\n    background: #63e6be;\r\n  }\r\n  &:active {\r\n    background: #20c997;\r\n  }\r\n\r\n  z-index: 5;\r\n  cursor: pointer;\r\n  width: 80px;\r\n  height: 80px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 60px;\r\n  position: absolute;\r\n  left: 50%;\r\n  bottom: 0px;\r\n  transform: translate(-50%, 50%);\r\n  color: white;\r\n  border-radius: 50%;\r\n  border: none;\r\n  outline: none;\r\n\r\n  transition: 0.125s all ease-in;\r\n  ${(props) =>\r\n    props.open &&\r\n    css`\r\n      background: #ff6b6b;\r\n      &:hover {\r\n        background: #ff8787;\r\n      }\r\n      &:active {\r\n        backgroubnd: #fa5252;\r\n      }\r\n      transform: translate(-50%, 50%) rotate(45deg);\r\n    `}\r\n`;\r\n\r\nconst InsertFormPositioner = styled.div`\r\n  width: 100%;\r\n  bottom: 0;\r\n  left: 0;\r\n  position: absolute;\r\n`;\r\n\r\nconst InsertForm = styled.form`\r\n  background: #f8f9fa;\r\n  padding-left: 32px;\r\n  padding-top: 32px;\r\n  padding-right: 32px;\r\n  padding-bottom: 72px;\r\n\r\n  border-bottom-left-radius: 16px;\r\n  border-bottom-right-radius: 16px;\r\n  border-top: 1px solid #e9ecef;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 12px;\r\n  border-radius: 4px;\r\n  border: 1px solid #dee2e6;\r\n  width: 100%;\r\n  outline: none;\r\n  font-size: 18px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst TodoCreate = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [value, setValue] = useState('');\r\n\r\n  const dispatch = useTodoDispatch();\r\n  const nextId = useTodoNextId();\r\n\r\n  const onToggle = () => setOpen(!open);\r\n  const onChange = (e) => setValue(e.target.value);\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch({\r\n      type: 'CREATE',\r\n      todo: {\r\n        id: nextId.current,\r\n        text: value,\r\n        done: false,\r\n      },\r\n    });\r\n    setValue('');\r\n    setOpen(false);\r\n    nextId.current += 1;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {open && (\r\n        <InsertFormPositioner>\r\n          <InsertForm onSubmit={onSubmit}>\r\n            <Input\r\n              autoFocus\r\n              placeholder=\"할 일을 입력 후, Enter를 누르세요\"\r\n              onChange={onChange}\r\n              value={value}\r\n            />\r\n          </InsertForm>\r\n        </InsertFormPositioner>\r\n      )}\r\n      <CircleButton onClick={onToggle} open={open}>\r\n        <MdAdd />\r\n      </CircleButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(TodoCreate);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTodoState } from '../todo_context';\r\n\r\nconst TodoHeadBlock = styled.div`\r\n  padding: 48px 32px 24px 32px;\r\n  border-bottom: 1px solid #e9ecef;\r\n  h1 {\r\n    margin: 0;\r\n    font-size: 36px;\r\n    color: #343a40;\r\n  }\r\n  .day {\r\n    margin-top: 4px;\r\n    color: #868e96;\r\n    font-size: 21px;\r\n  }\r\n  .task-left {\r\n    color: #20c997;\r\n    font-size: 18px;\r\n    margin-top: 40px;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst TodoHead = (props) => {\r\n  const todos = useTodoState();\r\n  const undoneTasks = todos.filter((todo) => !todo.done);\r\n\r\n  const today = new Date();\r\n  const dateString = today.toLocaleDateString('ko-KR', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n  });\r\n  const dayName = today.toLocaleDateString('ko-KR', { weekday: 'long' });\r\n\r\n  return (\r\n    <TodoHeadBlock>\r\n      <h1>{dateString}</h1>\r\n      <div className=\"day\">{dayName}</div>\r\n      <div className=\"task-left\">할 일 {undoneTasks.length}개 남음</div>\r\n    </TodoHeadBlock>\r\n  );\r\n};\r\n\r\nexport default TodoHead;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdDone, MdDelete } from 'react-icons/md';\r\nimport { useTodoDispatch } from '../todo_context';\r\n\r\nconst Remove = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #dee2e6;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  &:hovver {\r\n    color: #ff6b6b;\r\n  }\r\n  display: none;\r\n`;\r\n\r\nconst TodoItemBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  &:hover {\r\n    ${Remove} {\r\n      display: initial;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CheckCircle = styled.div`\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 16px;\r\n  border: 1px solid #ced4da;\r\n  font-size: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 20px;\r\n  cursor: pointer;\r\n  ${(props) =>\r\n    props.done &&\r\n    css`\r\n      border: 1px solid #38d9a9;\r\n      color: #38d9a9;\r\n    `}\r\n`;\r\n\r\nconst Text = styled.div`\r\n  flex: 1;\r\n  font-size: 21px;\r\n  color: #495057;\r\n  ${(props) =>\r\n    props.done &&\r\n    css`\r\n      color: #ced4da;\r\n    `}\r\n`;\r\n\r\nconst TodoItem = ({ id, done, text }) => {\r\n  const dispatch = useTodoDispatch();\r\n  const onToggle = () => dispatch({ type: 'TOGGLE', id });\r\n  const onRemove = () => dispatch({ type: 'REMOVE', id });\r\n  return (\r\n    <TodoItemBlock>\r\n      <CheckCircle done={done} onClick={onToggle}>\r\n        {done && <MdDone />}\r\n      </CheckCircle>\r\n      <Text done={done}>{text}</Text>\r\n      <Remove onClick={onRemove}>\r\n        <MdDelete />\r\n      </Remove>\r\n    </TodoItemBlock>\r\n  );\r\n};\r\n\r\nexport default React.memo(TodoItem);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport TodoItem from './todo_item';\r\nimport { useTodoState } from '../todo_context';\r\n\r\nconst TodoListBlock = styled.div`\r\n  flex: 1;\r\n  padding: 20px 32px 48px 32px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst TodoList = (props) => {\r\n  const todos = useTodoState();\r\n\r\n  return (\r\n    <TodoListBlock>\r\n      {todos.map((todo) => (\r\n        <TodoItem\r\n          key={todo.id}\r\n          id={todo.id}\r\n          text={todo.text}\r\n          done={todo.done}\r\n        />\r\n      ))}\r\n    </TodoListBlock>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoTemplateBlock = styled.div`\r\n  width: 512px;\r\n  height: 768px;\r\n\r\n  position: relative;\r\n  background: white;\r\n  border-radius: 16px;\r\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\r\n\r\n  margin: 96px auto 32px auto;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst TodoTemplate = ({ children }) => {\r\n  return <TodoTemplateBlock>{children}</TodoTemplateBlock>;\r\n};\r\n\r\nexport default TodoTemplate;\r\n","import React from 'react';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport TodoCreate from './components/todo_create';\r\nimport TodoHead from './components/todo_head';\r\nimport TodoList from './components/todo_list';\r\nimport TodoTemplate from './components/todo_template';\r\nimport { TodoProvider } from './todo_context';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    body {\r\n        background: #e9ecef;\r\n    }\r\n`;\r\n\r\nconst App = (props) => {\r\n  return (\r\n    <TodoProvider>\r\n      <GlobalStyle />\r\n      <TodoTemplate>\r\n        <TodoHead />\r\n        <TodoList />\r\n        <TodoCreate />\r\n      </TodoTemplate>\r\n    </TodoProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// 이 함수는 파라미터로 액션의 타입 (예: GET_USER) 과 Promise 를 만들어주는 함수를 받아옵니다.\r\nexport function createAsyncDispatcher(type, promiseFn) {\r\n  // 성공, 실패에 대한 액션 타입 문자열을 준비합니다.\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const ERROR = `${type}_ERROR`;\r\n\r\n  // 새로운 함수를 만듭니다.\r\n  // ...rest 를 사용하여 나머지 파라미터를 rest 배열에 담습니다.\r\n  async function actionHandler(dispatch, ...rest) {\r\n    dispatch({ type }); // 요청 시작됨\r\n    try {\r\n      const data = await promiseFn(...rest); // rest 배열을 spread 로 넣어줍니다.\r\n      dispatch({\r\n        type: SUCCESS,\r\n        data,\r\n      }); // 성공함\r\n    } catch (e) {\r\n      dispatch({\r\n        type: ERROR,\r\n        error: e,\r\n      }); // 실패함\r\n    }\r\n  }\r\n\r\n  return actionHandler; // 만든 함수를 반환합니다.\r\n}\r\n\r\nexport const initialAsyncState = {\r\n  loading: false,\r\n  data: null,\r\n  error: null,\r\n};\r\n\r\n// 로딩중일 때 바뀔 상태 객체\r\nconst loadingState = {\r\n  loading: true,\r\n  data: null,\r\n  error: null,\r\n};\r\n\r\n// 성공했을 때의 상태 만들어주는 함수\r\nconst success = (data) => ({\r\n  loading: false,\r\n  data,\r\n  error: null,\r\n});\r\n\r\n// 실패했을 때의 상태 만들어주는 함수\r\nconst error = (error) => ({\r\n  loading: false,\r\n  data: null,\r\n  error: error,\r\n});\r\n\r\n// 세가지 액션을 처리하는 리듀서를 만들어줍니다\r\n// type 은 액션 타입, key 는 리듀서서 사용할 필드 이름입니다 (예: user, users)\r\nexport function createAsyncHandler(type, key) {\r\n  // 성공, 실패에 대한 액션 타입 문자열을 준비합니다.\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const ERROR = `${type}_ERROR`;\r\n\r\n  // 함수를 새로 만들어서\r\n  function handler(state, action) {\r\n    switch (action.type) {\r\n      case type:\r\n        return {\r\n          ...state,\r\n          [key]: loadingState,\r\n        };\r\n      case SUCCESS:\r\n        return {\r\n          ...state,\r\n          [key]: success(action.data),\r\n        };\r\n      case ERROR:\r\n        return {\r\n          ...state,\r\n          [key]: error(action.error),\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n\r\n  // 반환합니다\r\n  return handler;\r\n}\r\n","import axios from 'axios';\r\n\r\nexport async function getUsers() {\r\n  const response = await axios.get(\r\n    'https://jsonplaceholder.typicode.com/users',\r\n  );\r\n  return response.data;\r\n}\r\n\r\nexport async function getUser(id) {\r\n  const response = await axios.get(\r\n    `https://jsonplaceholder.typicode.com/users/${id}`,\r\n  );\r\n  return response.data;\r\n}\r\n","import React, { createContext, useReducer, useContext } from 'react';\r\nimport {\r\n  createAsyncDispatcher,\r\n  createAsyncHandler,\r\n  initialAsyncState,\r\n} from './asyncActionUtils';\r\nimport * as api from './api'; // api 파일에서 내보낸 모든 함수들을 불러옴\r\n\r\n// UsersContext 에서 사용 할 기본 상태\r\nconst initialState = {\r\n  users: initialAsyncState,\r\n  user: initialAsyncState,\r\n};\r\n\r\nconst usersHandler = createAsyncHandler('GET_USERS', 'users');\r\nconst userHandler = createAsyncHandler('GET_USER', 'user');\r\n\r\n// 위에서 만든 객체 / 유틸 함수들을 사용하여 리듀서 작성\r\nfunction usersReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'GET_USERS':\r\n    case 'GET_USERS_SUCCESS':\r\n    case 'GET_USERS_ERROR':\r\n      return usersHandler(state, action);\r\n    case 'GET_USER':\r\n    case 'GET_USER_SUCCESS':\r\n    case 'GET_USER_ERROR':\r\n      return userHandler(state, action);\r\n    default:\r\n      throw new Error(`Unhanded action type: ${action.type}`);\r\n  }\r\n}\r\n\r\n// State 용 Context 와 Dispatch 용 Context 따로 만들어주기\r\nconst UsersStateContext = createContext(null);\r\nconst UsersDispatchContext = createContext(null);\r\n\r\n// 위에서 선언한 두가지 Context 들의 Provider 로 감싸주는 컴포넌트\r\nexport function UsersProvider({ children }) {\r\n  const [state, dispatch] = useReducer(usersReducer, initialState);\r\n  return (\r\n    <UsersStateContext.Provider value={state}>\r\n      <UsersDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </UsersDispatchContext.Provider>\r\n    </UsersStateContext.Provider>\r\n  );\r\n}\r\n\r\n// State 를 쉽게 조회 할 수 있게 해주는 커스텀 Hook\r\nexport function useUsersState() {\r\n  const state = useContext(UsersStateContext);\r\n  if (!state) {\r\n    throw new Error('Cannot find UsersProvider');\r\n  }\r\n  return state;\r\n}\r\n\r\n// Dispatch 를 쉽게 사용 할 수 있게 해주는 커스텀 Hook\r\nexport function useUsersDispatch() {\r\n  const dispatch = useContext(UsersDispatchContext);\r\n  if (!dispatch) {\r\n    throw new Error('Cannot find UsersProvider');\r\n  }\r\n  return dispatch;\r\n}\r\n\r\nexport const getUsers = createAsyncDispatcher('GET_USERS', api.getUsers);\r\nexport const getUser = createAsyncDispatcher('GET_USER', api.getUser);\r\n","import React, { useEffect } from 'react';\r\nimport { getUser, useUsersDispatch, useUsersState } from '../users_context';\r\n\r\nfunction User({ id }) {\r\n  const state = useUsersState();\r\n  const dispatch = useUsersDispatch();\r\n  useEffect(() => {\r\n    getUser(dispatch, id);\r\n  }, [dispatch, id]);\r\n\r\n  const { data: user, loading, error } = state.user;\r\n\r\n  if (loading) return <div>로딩중..</div>;\r\n  if (error) return <div>에러가 발생했습니다</div>;\r\n  if (!user) return null;\r\n  return (\r\n    <div>\r\n      <h2>{user.username}</h2>\r\n      <p>\r\n        <b>Email:</b> {user.email}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import React, { useState } from 'react';\r\nimport User from './user';\r\nimport { getUsers, useUsersDispatch, useUsersState } from '../users_context';\r\n\r\nfunction Users() {\r\n  const [userId, setUserId] = useState(null);\r\n  const state = useUsersState();\r\n  const dispatch = useUsersDispatch();\r\n\r\n  const { data: users, loading, error } = state.users;\r\n  const fetchData = () => {\r\n    getUsers(dispatch);\r\n  };\r\n\r\n  if (loading) return <div>로딩중..</div>;\r\n  if (error) return <div>에러가 발생했습니다</div>;\r\n  if (!users) return <button onClick={fetchData}>불러오기</button>;\r\n\r\n  return (\r\n    <>\r\n      <ul>\r\n        {users.map((user) => (\r\n          <li\r\n            key={user.id}\r\n            onClick={() => setUserId(user.id)}\r\n            style={{ cursor: 'pointer' }}\r\n          >\r\n            {user.username} ({user.name})\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button onClick={fetchData}>다시 불러오기</button>\r\n      {userId && <User id={userId} />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n","import React from 'react';\r\nimport Users from './components/users';\r\nimport styles from './app.module.css';\r\nimport { UsersProvider } from './users_context';\r\n\r\nconst App = (props) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <UsersProvider>\r\n        <Users />\r\n      </UsersProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nconst Counter = ({ number, diff, onIncrease, onDecrease, onSetDiff }) => {\r\n  const onChange = (e) => {\r\n    onSetDiff(parseInt(e.target.value, 10));\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>{number}</h1>\r\n      <div>\r\n        <input type=\"number\" value={diff} min=\"1\" onChange={onChange} />\r\n      </div>\r\n      <button onClick={onIncrease}>+</button>\r\n      <button onClick={onDecrease}>-</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","/* 액션 타입 만들기 */\r\n// Ducks 패턴을 따를땐 액션의 이름에 접두사를 넣어주세요.\r\n// 이렇게 하면 다른 모듈과 액션 이름이 중복되는 것을 방지 할 수 있습니다.\r\nconst SET_DIFF = 'counter/SET_DIFF';\r\nconst INCREASE = 'counter/INCREASE';\r\nconst DECREASE = 'counter/DECREASE';\r\n\r\n/* 액션 생성함수 만들기 */\r\n// 액션 생성함수를 만들고 export 키워드를 사용해서 내보내주세요.\r\nexport const setDiff = (diff) => ({ type: SET_DIFF, diff });\r\nexport const increase = () => ({ type: INCREASE });\r\nexport const decrease = () => ({ type: DECREASE });\r\n\r\n/* 초기 상태 선언 */\r\nconst initialState = {\r\n  number: 0,\r\n  diff: 1,\r\n};\r\n\r\n/* 리듀서 선언 */\r\n// 리듀서는 export default 로 내보내주세요.\r\nexport default function counter(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_DIFF:\r\n      return {\r\n        ...state,\r\n        diff: action.diff,\r\n      };\r\n    case INCREASE:\r\n      return {\r\n        ...state,\r\n        number: state.number + state.diff,\r\n      };\r\n    case DECREASE:\r\n      return {\r\n        ...state,\r\n        number: state.number - state.diff,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Counter from '../components/counter';\r\nimport { decrease, increase, setDiff } from '../modules/counter';\r\n\r\nconst CounterContainer = () => {\r\n  // useSelector는 리덕스 스토어의 상태를 조회하는 Hook입니다.\r\n  // state의 값은 store.getState() 함수를 호출했을 때 나타나는 결과물과 동일합니다.\r\n  const { number, diff } = useSelector((state) => ({\r\n    number: state.counter.number,\r\n    diff: state.counter.diff,\r\n  }));\r\n\r\n  // useDispatch 는 리덕스 스토어의 dispatch 를 함수에서 사용 할 수 있게 해주는 Hook 입니다.\r\n  const dispatch = useDispatch();\r\n  // 각 액션들을 디스패치하는 함수들을 만드세요\r\n  const onIncrease = () => dispatch(increase());\r\n  const onDecrease = () => dispatch(decrease());\r\n  const onSetDiff = (diff) => dispatch(setDiff(diff));\r\n\r\n  return (\r\n    <Counter\r\n      // 상태와\r\n      number={number}\r\n      diff={diff}\r\n      // 액션을 디스패치 하는 함수들을 props로 넣어줍니다.\r\n      onIncrease={onIncrease}\r\n      onDecrease={onDecrease}\r\n      onSetDiff={onSetDiff}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CounterContainer;\r\n","import React from 'react';\r\nimport styles from './app.module.css';\r\nimport CounterContainer from './containers/counter_container';\r\n\r\nconst App = (props) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <CounterContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","/* 액션 타입 선언 */\r\nconst ADD_TODO = 'todos/ADD_TODO';\r\nconst TOGGLE_TODO = 'todos/TOGGLE_TODO';\r\n\r\n/* 액션 생성함수 선언 */\r\nlet nextId = 1; // todo 데이터에서 사용 할 고유 id\r\nexport const addTodo = (text) => ({\r\n  type: ADD_TODO,\r\n  todo: {\r\n    id: nextId++, // 새 항목을 추가하고 nextId 값에 1을 더해줍니다.\r\n    text,\r\n  },\r\n});\r\nexport const toggleTodo = (id) => ({\r\n  type: TOGGLE_TODO,\r\n  id,\r\n});\r\n\r\n/* 초기 상태 선언 */\r\n// 리듀서의 초기 상태는 꼭 객체타입일 필요 없습니다.\r\n// 배열이여도 되고, 원시 타입 (숫자, 문자열, 불리언 이여도 상관 없습니다.\r\nconst initialState = [\r\n  /* 우리는 다음과 같이 구성된 객체를 이 배열 안에 넣을 것입니다.\r\n  {\r\n    id: 1,\r\n    text: '예시',\r\n    done: false\r\n  } \r\n  */\r\n];\r\n\r\nexport default function todos(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return state.concat(action.todo);\r\n    case TOGGLE_TODO:\r\n      return state.map(\r\n        (todo) =>\r\n          todo.id === action.id // id 가 일치하면\r\n            ? { ...todo, done: !todo.done } // done 값을 반전시키고\r\n            : todo, // 아니라면 그대로 둠\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport counter from './counter';\r\nimport todos from './todos';\r\n\r\nconst rootReducer = combineReducers({\r\n  counter,\r\n  todos,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport App from './app';\r\nimport rootReducer from './modules';\r\n\r\nconst store = createStore(rootReducer); // 스토어를 만듭니다.\r\nconsole.log(store.getState()); // 스토어의 상태를 확인해봅시다.\r\n\r\nclass Index extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;\r\n","import React from 'react';\r\n\r\nconst App = (props) => {\r\n  return <h1>App</h1>;\r\n};\r\n\r\nexport default App;\r\n","import { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport styles from './app.module.css';\r\nimport Header from './components/header/header';\r\nimport Main from './components/main/main';\r\nimport TodoListApp from './projects/todo_list/src/app';\r\nimport ConnectApiApp from './projects/connect_API/src/app';\r\nimport Redux from './projects/redux/src/index';\r\nimport Typescript from './projects/typescript/src/app';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Main />\r\n        </Route>\r\n        <Route path=\"/todoList\">\r\n          <TodoListApp />\r\n        </Route>\r\n        <Route path=\"/connectAPI\">\r\n          <ConnectApiApp />\r\n        </Route>\r\n        <Route path=\"/redux\">\r\n          <Redux />\r\n        </Route>\r\n        <Route path=\"/typescript\">\r\n          <Typescript />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}